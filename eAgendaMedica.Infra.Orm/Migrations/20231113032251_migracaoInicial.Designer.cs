// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eAgendaMedica.Infra.Orm;

#nullable disable

namespace eAgendaMedica.Infra.Orm.Migrations
{
    [DbContext(typeof(eAgendaMedicaDbContext))]
    [Migration("20231113032251_migracaoInicial")]
    partial class migracaoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloAtividade.Cirurgia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<long>("HoraInicio")
                        .HasColumnType("bigint");

                    b.Property<long>("HoraTermino")
                        .HasColumnType("bigint");

                    b.Property<long>("PeriodoRecuperacao")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TBCirurgia", (string)null);
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloAtividade.Consulta", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<long>("HoraInicio")
                        .HasColumnType("bigint");

                    b.Property<long>("HoraTermino")
                        .HasColumnType("bigint");

                    b.Property<Guid>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("PeriodoRecuperacao")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("TBConsulta", (string)null);
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloMedico.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CirurgiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Crm")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CirurgiaId");

                    b.ToTable("TBMedico", (string)null);
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloAtividade.Consulta", b =>
                {
                    b.HasOne("eAgendaMedica.Dominio.ModuloMedico.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloMedico.Medico", b =>
                {
                    b.HasOne("eAgendaMedica.Dominio.ModuloAtividade.Cirurgia", null)
                        .WithMany("Medicos")
                        .HasForeignKey("CirurgiaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloAtividade.Cirurgia", b =>
                {
                    b.Navigation("Medicos");
                });
#pragma warning restore 612, 618
        }
    }
}
